<Activity mc:Ignorable="sap sap2010 sads" x:Class="RepeatedActivityName"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Tree representation of the XAML file." Name="in_XMLTree" Type="InArgument(sx:XmlDocument)" />
    <x:Property sap2010:Annotation.AnnotationText="Namespace manager associated with the constructed XML tree." Name="in_NamespaceManager" Type="InArgument(sx:XmlNamespaceManager)" />
    <x:Property sap2010:Annotation.AnnotationText="Location of project to be inspected." Name="in_ProjectPath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary representation of the check's arguments." Name="in_CheckArguments" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="Location of workflow to be inspected." Name="in_WorkflowPath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Issues found at workflow level." Name="out_WorkflowIssues" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CheckMissingScreenshots_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Linq.Expressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="The names of the activities should give a clear idea of how it is being used. Although the default names usually provide a good description, sometimes they are too generic, so it is recommended to add more information when the context is not clear. &#xA;This check looks for activities within a workflow that have the same name, which might indicate that the same generic name is used multiple times. &#xA;&#xA;The check accepts an argument which is the threshold of up to how many activities can have the same name.&#xA;&#xA;The steps to find repeated activity names are as follows:&#xA;1 - Find all activity nodes&#xA;2 - Create an index (Dictionary) with DisplayNames and a list of what nodes they are found in&#xA;3 - Checks whether the list of nodes for a given DisplayName is longer than the specified repetition threshold" DisplayName="Check For Repeated Activity Name" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="XPathExpression" />
      <Variable x:TypeArguments="x:Int32" Name="RepetitionThreshold" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(sx:XmlNode))" Default="[New Dictionary(Of String, List(Of XmlNode))]" Name="ActivityDisplayNameIndex" />
    </Sequence.Variables>
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Initializes a data table to hold the workflow's issues. It'll be merged to the table containing all issues in the project." DataTable="[out_WorkflowIssues]" DisplayName="Build data table with workflow issues" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;InternalPath&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;NodeName&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <If Condition="[in_CheckArguments.ContainsKey(&quot;Threshold&quot;)]" DisplayName="If repetition threshold was provided" sap2010:WorkflowViewState.IdRef="If_9">
      <If.Then>
        <Assign DisplayName="Assign RepetitionThreshold" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[RepetitionThreshold]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(in_CheckArguments("Threshold"))]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Assign RepetitionThreshold (default )" sap2010:WorkflowViewState.IdRef="Assign_14">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[RepetitionThreshold]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">1</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <Assign sap2010:Annotation.AnnotationText="Retrieves all activities that have the sap2010:WorkflowViewState.IdRef attribute.&#xA;Although names of activities shown in Studio are usually specified by the DisplayName attribute, some activities don't have this attribute by default (e.g., Assign).&#xA;&#xA;Skips the following nodes:&#xA;- FlowStep nodes, since they aren't explicitly shown in UiPath Studio.&#xA;- Catch blocks and AssignOperation nodes, since they don't have a DisplayName attribute. Note that not all nodes without DisplayName should be skipped because some of them can have DisplayName added by UiPath Studio when the activity is modified (e.g., Assign activity).&#xA;- Sequence activities are not considered due to the fact that error messages are thrown by activities inside sequences, not by sequences themselves, so it is not a problem if their names are repeated (like it happens when they are named Body or Do)." DisplayName="Assign XPathExpression" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[XPathExpression]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["//*[@sap2010:WorkflowViewState.IdRef and not(local-name()='FlowStep') and not(local-name()='Catch') and not(local-name()='AssignOperation') and not(local-name()='Sequence') and not(local-name()='Property')]"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="sx:XmlNode" DisplayName="For each node representing an activity" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[in_XMLTree.DocumentElement.SelectNodes(XPathExpression, in_NamespaceManager)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sx:XmlNode">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="ActivityNode" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:GenericValue" Name="DisplayName" />
            </Sequence.Variables>
            <If sap2010:Annotation.AnnotationText="Considers the DisplayName if exits; if not, uses the activity's LocalName." Condition="[ActivityNode.Attributes(&quot;DisplayName&quot;) Is Nothing]" DisplayName="If DisplayName attribute exists" sap2010:WorkflowViewState.IdRef="If_10">
              <If.Then>
                <Assign DisplayName="Assign DisplayName as LocalName" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[DisplayName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[ActivityNode.LocalName]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign DisplayName="Assign DisplayName" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[DisplayName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[ActivityNode.Attributes("DisplayName").Value]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Creates an index of activity names." Condition="[ActivityDisplayNameIndex.ContainsKey(DisplayName)]" DisplayName="If DisplayName was previously found" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <AddToCollection x:TypeArguments="sx:XmlNode" Collection="[ActivityDisplayNameIndex(DisplayName)]" DisplayName="Add node to activities with the same DisplayName" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[ActivityNode]" />
              </If.Then>
              <If.Else>
                <Assign sap2010:Annotation.AnnotationText="Initializes list of activities with current DisplayName" DisplayName="Assign ActivityDisplayNameIndex(DisplayName) (initialization)" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:List(sx:XmlNode)">[ActivityDisplayNameIndex(DisplayName)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:List(sx:XmlNode)">[New List(Of XmlNode) From {ActivityNode}]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:List(sx:XmlNode))" DisplayName="For each DisplayName" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[ActivityDisplayNameIndex]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:List(sx:XmlNode))">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:List(sx:XmlNode))" Name="DisplayNameOccurrences" />
          </ActivityAction.Argument>
          <If Condition="[DisplayNameOccurrences.Value.Count &gt; RepetitionThreshold]" DisplayName="If DisplayName is repeated more times than threshold" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <ui:ForEach x:TypeArguments="sx:XmlNode" DisplayName="For each activity node with repeated DisplayName" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[DisplayNameOccurrences.Value]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="sx:XmlNode">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="NodeWithRepeatedDisplayName" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Add issue" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="TargetName" />
                        <Variable x:TypeArguments="x:String" Name="InternalPath" />
                      </Sequence.Variables>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Retrieves the path to the activity, considering the hierarchy of activities in the workflow." DisplayName="Get activity's internal path" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Common\GetInternalPath.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="sx:XmlNode" x:Key="in_ActivityNode">[NodeWithRepeatedDisplayName]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_InternalPath">[InternalPath]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If sap2010:Annotation.AnnotationText="Retrieves the target's display name, if it is defined." Condition="[NodeWithRepeatedDisplayName.Attributes(&quot;DisplayName&quot;) Is Nothing]" DisplayName="If activity has DisplayName" sap2010:WorkflowViewState.IdRef="If_11">
                        <If.Then>
                          <Assign DisplayName="Assign TargetName (local name)" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[TargetName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[NodeWithRepeatedDisplayName.LocalName]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Assign DisplayName="Assign TargetName (display name)" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[TargetName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[NodeWithRepeatedDisplayName.Attributes("DisplayName").Value]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{InternalPath, TargetName}]" DataTable="[out_WorkflowIssues]" DisplayName="Add issue to local issues table" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </If.Then>
          </If>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <sads:DebugSymbol.Symbol>d2JDOlxVc2Vyc1xtYXRldXMuY3J1elxEb2N1bWVudHNcR2l0SHViXFdvcmtmbG93LUluc3BlY3RvclxDaGVja3NcU3RhbmRhcmRcUmVwZWF0ZWRBY3Rpdml0eU5hbWUueGFtbDhkA/YBDgIBAWhaaIkBAgECagVqtQsCAUVrBYABCgIBOoEBBYgBDgIBNokBBbsBEgIBILwBBfQBEgIBA2rBAWrXAQIBRmsTa0sCATttCXQSAgFBdwl+EgIBPYYBMIYBggICATmDATGDAUICATeJAZgBiQHoAQIBNY8BC7gBFgIBIbwBrAG8AcgBAgEfwgEL8QEQAgEEcjNyZAIBRG80b0kCAUJ8M3w0AgFAeTR5SQIBPpMBDagBEgIBK6kBDbcBEgIBIsIBGcIBWAIBBcQBD+8BHAIBBpMBigGTAckBAgEslQERnAEaAgExnwERpgEaAgEtqQFjqQGYAQIBI6sBEasBgQICASeuARG1ARoCASTEAawBxAHMAQIBHsoBFewBIAIBB5oBQ5oBWwIBNJcBRJcBUQIBMqQBQ6QBcQIBMKEBRKEBUQIBLqsBSqsBcwIBKqsB7gGrAf4BAgEoswFIswFyAgEmsAFJsAFwAgElzwEX1AEvAgEY1QEX6gEcAgEO6wEX6wHhAQIBCNIBXNIBagIBHNEBXNEBeQIBGs8BzALPAekCAgEZ1QGAAdUBzgECAQ/XARveASQCARThARvoASQCARDrAWvrAYEBAgEM6wFC6wFgAgEJ3AFG3AFtAgEX2QFH2QFTAgEV5gFG5gGDAQIBE+MBR+MBUwIBEQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="546.666666666667,120.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60.6666666666667" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60.6666666666667" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="546.666666666667,52.6666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="546.666666666667,539.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60.6666666666667" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60.6666666666667" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="508.666666666667,241.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="508.666666666667,286.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="530.666666666667,692">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="546.666666666667,828.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314,132">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="314,98">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_5" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,456">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_9" sap:VirtualizedContainerService.HintSize="352,592.666666666667" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="477.333333333333,744.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="546.666666666667,881.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="568.666666666667,2952">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CheckMissingScreenshots_1" sap:VirtualizedContainerService.HintSize="608.666666666667,3032" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>