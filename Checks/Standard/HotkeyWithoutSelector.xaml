<Activity mc:Ignorable="sap sap2010 sads" x:Class="HotkeyWithoutSelector"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml"
 xmlns:sxx="clr-namespace:System.Xml.XPath;assembly=System.Xml"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Tree representation of the XAML file." Name="in_XMLTree" Type="InArgument(sx:XmlDocument)" />
    <x:Property sap2010:Annotation.AnnotationText="Namespace manager associated with the constructed XML tree." Name="in_NamespaceManager" Type="InArgument(sx:XmlNamespaceManager)" />
    <x:Property sap2010:Annotation.AnnotationText="Location of project to be inspected." Name="in_ProjectPath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary representation of the check's arguments." Name="in_CheckArguments" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="Location of workflow to be inspected." Name="in_WorkflowPath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Issues found at workflow level." Name="out_WorkflowIssues" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CheckMissingScreenshots_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Send Hotkey activities without selectors or specified UI elements can be intercepted by any application that comes to the foreground (for example, Windows notifications and antivirus popups), which will prevent the intended execution. &#xA;For this reason, it is recommended to use selectors or include them in parent activities that have selectors (for example, Attach Window or Attach Browser).&#xA;&#xA;The steps to find hotkey without selector are as follows:&#xA;1 - Look for Send Hotkey activity nodes whose targets do not contain selectors or UiElements&#xA;2 - Check if the activity is inside another one (i.e., Open Browser, Open Application, Attach Browser, Attach Window, Element Scope) that specifies a selector or has a scope (i.e., UiBrowser property in Attach Browser, Window in Attach Window or Element in Element Scope)." DisplayName="Check For Hotkey Without Selector" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="XPathExpression" />
    </Sequence.Variables>
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Initializes a data table to hold the workflow's issues. It'll be merged to the table containing all issues in the project." DataTable="[out_WorkflowIssues]" DisplayName="Build data table with workflow issues" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;InternalPath&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;NodeName&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <Assign sap2010:Annotation.AnnotationText="Retrieves all elements that represent a SendHotkey activity without a selector or an UiElement." DisplayName="Assign XPathExpression" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[XPathExpression]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["//ui:SendHotkey[./ui:SendHotkey.Target/ui:Target[@Selector = '{x:Null}' and @Element = '{x:Null}']]"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="sx:XmlNode" DisplayName="For each Send Hotkey activity node" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[in_XMLTree.DocumentElement.SelectNodes(XPathExpression, in_NamespaceManager)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sx:XmlNode">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="Node" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_39">
            <Sequence.Variables>
              <Variable x:TypeArguments="sxx:XPathNavigator" Name="SendHotkeyNavigator" />
              <Variable x:TypeArguments="x:Boolean" Default="True" Name="SendHotKeyWithoutSelector" />
            </Sequence.Variables>
            <Assign DisplayName="Assign SendHotkeyNavigator" sap2010:WorkflowViewState.IdRef="Assign_34">
              <Assign.To>
                <OutArgument x:TypeArguments="sxx:XPathNavigator">[SendHotkeyNavigator]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sxx:XPathNavigator">[Node.CreateNavigator()]</InArgument>
              </Assign.Value>
            </Assign>
            <While sap2010:Annotation.AnnotationText="Goes up the activity hierachy until it reaches an activity container or the root of the workflow." DisplayName="While container or workflow root is not found" sap2010:WorkflowViewState.IdRef="While_3" Condition="[SendHotKeyWithoutSelector AndAlso SendHotkeyNavigator.LocalName &lt;&gt; &quot;Activity&quot;]">
              <Sequence DisplayName="Verify if container is found and go to parent node" sap2010:WorkflowViewState.IdRef="Sequence_37">
                <Switch x:TypeArguments="x:String" DisplayName="Switch SendHotkeyContainerNode.LocalName" Expression="[SendHotkeyNavigator.LocalName]" sap2010:WorkflowViewState.IdRef="Switch`1_4">
                  <Switch.Default>
                    <Assign DisplayName="Assign HotKeyWithoutSelector (Not a container activity)" sap2010:WorkflowViewState.IdRef="Assign_35">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[SendHotKeyWithoutSelector]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Switch.Default>
                  <Assign x:Key="WindowScope" sap2010:Annotation.AnnotationText="Send Hotkey is inside an Attach Window activity. The selector can be defined via the Selector attribute or the window can be passed as a Window variable." DisplayName="Assign HotKeyWithoutSelector (Send Hotkey inside Attach Window)" sap2010:WorkflowViewState.IdRef="Assign_36">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[SendHotKeyWithoutSelector]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[SendHotkeyNavigator.GetAttribute("Selector", "") = "{x:Null}" AndAlso SendHotkeyNavigator.GetAttribute("Window", "")  = "{x:Null}"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign x:Key="BrowserScope" sap2010:Annotation.AnnotationText="Send Hotkey is inside an Attach Browser activity. The selector can be defined via the Selector attribute or the browser can be passed as a UiBrowser variable." DisplayName="Assign HotKeyWithoutSelector (Send Hotkey inside Attach Browser)" sap2010:WorkflowViewState.IdRef="Assign_37">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[SendHotKeyWithoutSelector]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[SendHotkeyNavigator.GetAttribute("Selector", "")  = "{x:Null}" AndAlso SendHotkeyNavigator.GetAttribute("Browser", "")  = "{x:Null}"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign x:Key="OpenApplication" sap2010:Annotation.AnnotationText="Send Hotkey is inside an Open Application activity. The selector can be defined via the Selector attribute." DisplayName="Assign HotKeyWithoutSelector (Send Hotkey inside Open Application)" sap2010:WorkflowViewState.IdRef="Assign_38">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[SendHotKeyWithoutSelector]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">[SendHotkeyNavigator.GetAttribute("Selector", "") = "{x:Null}"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Sequence x:Key="ElementScope" DisplayName="Search for selector in target of Element Scope" sap2010:WorkflowViewState.IdRef="Sequence_36">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sxx:XPathNavigator" Name="ElementScopeTargetNavigator" />
                    </Sequence.Variables>
                    <Assign DisplayName="Assign ElementScopeTargetNavigator" sap2010:WorkflowViewState.IdRef="Assign_39">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sxx:XPathNavigator">[ElementScopeTargetNavigator]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sxx:XPathNavigator">[SendHotkeyNavigator.SelectSingleNode("./ui:ElementScope.Target/ui:Target", in_NamespaceManager)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign HotKeyWithoutSelector (Send Hotkey inside Element Scope)" sap2010:WorkflowViewState.IdRef="Assign_40">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[SendHotKeyWithoutSelector]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">[ElementScopeTargetNavigator.GetAttribute("Element", "") = "{x:Null}" AndAlso ElementScopeTargetNavigator.GetAttribute("Selector", "") = "{x:Null}"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Switch>
                <InvokeMethod DisplayName="Invoke method MoveToParent" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="MoveToParent">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="sxx:XPathNavigator">[SendHotkeyNavigator]</InArgument>
                  </InvokeMethod.TargetObject>
                </InvokeMethod>
              </Sequence>
            </While>
            <If Condition="[SendHotKeyWithoutSelector]" DisplayName="If Send Hotkey without selector is found" sap2010:WorkflowViewState.IdRef="If_16">
              <If.Then>
                <Sequence DisplayName="Add issue" sap2010:WorkflowViewState.IdRef="Sequence_38">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="TargetName" />
                    <Variable x:TypeArguments="x:String" Name="InternalPath" />
                  </Sequence.Variables>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Retrieves the path to the activity, considering the hierarchy of activities in the workflow." DisplayName="Get activity's internal path" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Common\GetInternalPath.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="sx:XmlNode" x:Key="in_ActivityNode">[Node]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_InternalPath">[InternalPath]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <If sap2010:Annotation.AnnotationText="Retrieves the target's display name, if it is defined." Condition="[Node.Attributes(&quot;DisplayName&quot;) Is Nothing]" DisplayName="If activity has DisplayName" sap2010:WorkflowViewState.IdRef="If_15">
                    <If.Then>
                      <Assign DisplayName="Assign TargetName (local name)" sap2010:WorkflowViewState.IdRef="Assign_41">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[TargetName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Node.LocalName]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign DisplayName="Assign TargetName (display name)" sap2010:WorkflowViewState.IdRef="Assign_42">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[TargetName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Node.Attributes("DisplayName").Value]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{InternalPath, TargetName}]" DataTable="[out_WorkflowIssues]" DisplayName="Add issue to local issues table" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <sads:DebugSymbol.Symbol>d2NDOlxVc2Vyc1xNYXRldXMgQ3J1elxEb2N1bWVudHNcR2l0SHViXFdvcmtmbG93LUluc3BlY3RvclxDaGVja3NcU3RhbmRhcmRcSG90a2V5V2l0aG91dFNlbGVjdG9yLnhhbWw3ZQPzAQ4CAQFpBWm1CwIBTGoFcQ4CAUhyBfEBEgIBAmnBAWnXAQIBTW8wb5cBAgFLbDFsQgIBSXKUAXLkAQIBR3gL7gEWAgEDez17QwIBBH0NhAEWAgFChQENxgEVAgEfxwEN7QESAgEFggFCggFaAgFFf0N/WAIBQ4YBD8UBGgIBIYUBigKFAesCAgEgxwEbxwE4AgEGyQER6wEcAgEIhwERvwEaAgElwAERxAEgAgEizgET0wErAgEZ1AET6QEYAgEP6gET6gHdAQIBCYcBdocBlwECASaSAROZARwCAT6aAROhARwCATqiAROpARwCATaqARO+AR4CASuJARWQAR4CASfCAUbCAVsCASPRAVjRAWYCAR3QAVjQAV4CARvOAcgCzgHlAgIBGtQBfNQBswECARDWARfdASACARXgARfnASACARHqAWfqAX0CAQ3qAT7qAVwCAQqUAUCUAVsCAT+cAUCcAVsCATunAT+nAX4CATmkAUCkAVsCATeuARW1AR4CATC2ARW9AR4CASyOAUGOAUUCASqLAUKLAV0CASjbAULbAVICARjYAUPYAU8CARblAULlAWgCARTiAUPiAU8CARKzAUqzAasBAgEzsAFLsAFoAgExuwFBuwHVAQIBL7gBQrgBXQIBLQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="502,116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="502,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,147">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="242,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Switch`1_4" sap:VirtualizedContainerService.HintSize="477,310">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="477,132" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="499,606">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_3" sap:VirtualizedContainerService.HintSize="464,123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="314,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_6" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="336,448">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="464,596">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="486,983">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="502,1117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="524,1761">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CheckMissingScreenshots_1" sap:VirtualizedContainerService.HintSize="564,1841">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>